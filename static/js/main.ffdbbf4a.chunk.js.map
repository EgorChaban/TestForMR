{"version":3,"sources":["state/Reducer.ts","api/app-api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ACTION_TYPE","instance","axios","create","baseURL","appApi","get","Reducer","iniState","action","type","CHANGE_VALUE","value","COMPARE_LENGTH","Number","state","data","filter","i","length","flag","checkValue","regexp","RegExp","match","CHANGE_CHECK_VALUE","GET_DATA","fetchData","dispatch","then","res","App","useEffect","useReducer","initialState","compareLength","className","href","onChange","e","currentTarget","checked","onClick","map","s","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAGKA,E,wECDCC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,+DAGAC,EAAS,WAEd,OAAOJ,EAASK,IAAI,e,SDLvBN,K,4BAAAA,E,gCAAAA,E,wCAAAA,E,qBAAAA,M,KAsBE,IAAMO,EAAU,SAACC,EAAqBC,GACzC,OAAQA,EAAOC,MACX,KAAKV,EAAYW,aACb,OAAO,2BAAIH,GAAX,IAAqBI,MAAOH,EAAOG,QAGvC,KAAKZ,EAAYa,eACb,GAAIC,OAAOL,EAAOG,OAEV,OAAO,2BAAIJ,GAAX,IAAqBO,MAAON,EAAOO,KAAKC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAASL,OAAOL,EAAOG,YAG7E,IAAIQ,EACkBA,EAAtBZ,EAASa,WAAoB,IAAa,KAC1C,IAAIC,EAAS,IAAIC,OAAOd,EAAOG,MAAOQ,GACtC,OAAO,2BAAIZ,GAAX,IAAqBO,MAAON,EAAOO,KAAKC,QAAO,SAAAC,GAAC,OAAIA,EAAEM,MAAMF,QAIxE,KAAKtB,EAAYyB,mBACb,OAAO,2BAAIjB,GAAX,IAAqBa,WAAYZ,EAAOY,aAI5C,KAAKrB,EAAY0B,SACb,OAAO,2BAAKlB,GAAZ,IAAsBQ,KAAMP,EAAOO,OAEvC,QAAS,OAAOR,IAoCXmB,EAAY,SAACC,GACtBvB,IACKwB,MAAK,SAACC,GARU,IAACd,EASdY,GATcZ,EASKc,EAAId,KAAKA,KAR7B,CACHN,KAAMV,EAAY0B,SAAUV,c,OEHrBe,MArEf,WAAgB,IAAD,EAEXC,qBAAW,WACPL,EAAUC,KACX,IAJQ,MAMoBK,qBAAW1B,EAAS,CAC/CS,KAAM,CAAC,IACPD,MAAO,GACPH,MAAO,GACPS,YAAY,IAVL,mBAMNa,EANM,KAMQN,EANR,KAmBLO,EAAgB,WFmCK,IAACnB,EAAqBJ,EElC7CgB,GFkCwBZ,EElCCkB,EAAalB,KFkCOJ,EElCDsB,EAAatB,MFmCtD,CACHF,KAAMV,EAAYa,eAAgBG,OAAMJ,YE3B5C,OACI,sBAAKwB,UAAU,MAAf,wNAE0C,mBAAGC,KAAK,8CAAR,wCAF1C,qHAGI,sBAAKD,UAAW,UAAhB,UACI,uBACIA,UAAW,QACXE,SAtBI,SAACC,GFgCI,IAAC3B,EE/BtBgB,GF+BsBhB,EE/BC2B,EAAEC,cAAc5B,MFgCpC,CACHF,KAAMV,EAAYW,aAAcC,YEXpBA,MAAOsB,EAAatB,QAExB,sBAAKwB,UAAW,UAAhB,UACI,uBACIA,UAAW,WACX1B,KAAK,WACL+B,QAASP,EAAab,WACtBiB,SApBK,SAACC,GFsCI,IAAClB,EErC3BO,GFqC2BP,EErCCkB,EAAEC,cAAcC,QFsCzC,CACH/B,KAAMV,EAAYyB,mBAAoBJ,mBElB1B,wBAAQe,UAAW,SAAUM,QAASP,EAAtC,oBAGA,wBAAQC,UAAW,SAAUM,QAASP,EAAtC,0BAIJ,oBAAIC,UAAW,KAAf,mBACIF,EAAanB,aADjB,aACI,EAAoB4B,KAAI,SAACC,EAAGC,GACpB,OACI,oBAAIT,UAAW,KAAf,SAEKQ,GADIC,eCvD1BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ffdbbf4a.chunk.js","sourcesContent":["\r\nimport {appApi} from \"../api/app-api\";\r\n\r\nenum ACTION_TYPE {\r\n    CHANGE_VALUE = 'CHANGE_VALUE',\r\n    COMPARE_LENGTH = 'COMPARE_LENGTH',\r\n    CHANGE_CHECK_VALUE = 'CHANGE_CHECK_VALUE',\r\n    GET_DATA = 'GET_DATA'\r\n}\r\n\r\nexport type stateType = {\r\n    data: Array<string>\r\n    state: Array<string>\r\n    value: string\r\n    checkValue: boolean\r\n}\r\n\r\n\r\ntype ActionType =\r\n    changeValueACType\r\n    | compareLengthACType\r\n    | changeCheckValueACType\r\n    | getDataACType\r\n\r\n\r\nexport const Reducer = (iniState: stateType, action: ActionType): stateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.CHANGE_VALUE: {\r\n            return {...iniState, value: action.value}\r\n        }\r\n\r\n        case ACTION_TYPE.COMPARE_LENGTH: {\r\n            if (Number(action.value)) {\r\n\r\n                    return {...iniState, state: action.data.filter(i => i.length > Number(action.value))}\r\n\r\n            } else {\r\n                    let flag\r\n                    iniState.checkValue ? flag = 'g' : flag = 'gi'\r\n                    let regexp = new RegExp(action.value, flag)\r\n                    return {...iniState, state: action.data.filter(i => i.match(regexp))}\r\n            }\r\n        }\r\n\r\n        case ACTION_TYPE.CHANGE_CHECK_VALUE: {\r\n            return {...iniState, checkValue: action.checkValue}\r\n        }\r\n\r\n\r\n        case ACTION_TYPE.GET_DATA: {\r\n            return { ...iniState, data: action.data }\r\n        }\r\n        default: return iniState\r\n    }\r\n}\r\n\r\n\r\ntype changeValueACType = ReturnType<typeof changeValueAC>\r\nexport const changeValueAC = (value: string) => {\r\n    return {\r\n        type: ACTION_TYPE.CHANGE_VALUE, value\r\n    } as const\r\n}\r\n\r\n\r\ntype compareLengthACType = ReturnType<typeof compareLengthAC>\r\nexport const compareLengthAC = (data: Array<string>, value: string) => {\r\n    return {\r\n        type: ACTION_TYPE.COMPARE_LENGTH, data, value\r\n    } as const\r\n}\r\n\r\n\r\ntype changeCheckValueACType = ReturnType<typeof changeCheckValueAC>\r\nexport const changeCheckValueAC = (checkValue: boolean) => {\r\n    return {\r\n        type: ACTION_TYPE.CHANGE_CHECK_VALUE, checkValue\r\n    } as const\r\n}\r\n\r\n\r\ntype getDataACType = ReturnType<typeof getDataAC>\r\nexport const getDataAC = (data: Array<string>) => {\r\n    return {\r\n        type: ACTION_TYPE.GET_DATA, data\r\n    } as const\r\n}\r\n\r\nexport const fetchData = (dispatch: (g: getDataACType) => void) => {\r\n    appApi.getData()\r\n        .then((res) => {\r\n            dispatch(getDataAC(res.data.data))\r\n        })\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/https://www.mrsoft.by/'\r\n})\r\n\r\nexport const appApi = {\r\n    getData() {\r\n        return instance.get(\"data.json\")\r\n    }\r\n}","import React, {ChangeEvent, useEffect, useReducer} from 'react';\nimport  './App.css';\nimport {\n    changeCheckValueAC,\n    changeValueAC,\n    compareLengthAC, fetchData,\n    Reducer\n} from \"./state/Reducer\";\nimport {Link} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n    useEffect( () => {\n        fetchData(dispatch)\n    }, [] )\n\n    let [initialState, dispatch] = useReducer(Reducer, {\n        data: [''],\n        state: [],\n        value: '',\n        checkValue: false\n    })\n\n\n    const changeValue = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(changeValueAC(e.currentTarget.value))\n    }\n\n\n    const compareLength = () => {\n        dispatch(compareLengthAC(initialState.data, initialState.value))\n    }\n\n\n    const changeCheckValue = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(changeCheckValueAC(e.currentTarget.checked))\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            если данные не отображаются, перейдите<a href=\"http://cors-anywhere.herokuapp.com/corsdemo\"> сюда </a> и нажмите кнопку \"Request temporary access\"\n            <div className={'wrapper'}>\n                <input\n                    className={'input'}\n                    onChange={changeValue}\n                    value={initialState.value}\n                />\n                <div className={'btnWrap'}>\n                    <input\n                        className={'checkbox'}\n                        type=\"checkbox\"\n                        checked={initialState.checkValue}\n                        onChange={changeCheckValue}\n                    />\n                    <button className={'button'} onClick={compareLength}>\n                        length\n                    </button>\n                    <button className={'button'} onClick={compareLength}>\n                        substring\n                    </button>\n                </div>\n                <ul className={'ul'}>{\n                    initialState.state?.map((s, index) => {\n                            return (\n                                <li className={'li'}\n                                    key={index}>\n                                    {s}\n                                </li>\n                            )\n                        }\n                    )}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}